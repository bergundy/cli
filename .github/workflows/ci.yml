name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  copyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Verify File Headers
        run: go run ./cmd/copyright --verify-only

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Race
        run: go test -v -race ./...
        continue-on-error: true

      - name: Test
        run: go test -v -coverpkg=./... -covermode=atomic -coverprofile=coverage.out ./...

      - name: Coverage
        uses: codecov/codecov-action@v3

  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        flags:
          - ""
          - -tags headless
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: "echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}"

      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3.0.0
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Test
        env:
          CGO_ENABLED: ${{ matrix.cgo }}
        run: go test -v ${{ matrix.flags }} ./...
